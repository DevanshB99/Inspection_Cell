<?xml version="1.0"?>
<robot xmlns:xacro="http://wiki.ros.org/xacro">
  <!--
    Inspection Cell xacro macro - UNIFIED OBJECT-CENTRIC VERSION
    
    Kinematic Chain: World → table_link → object_frame → turntable_disc_link → turntable_base_link_inertia → turntable_base_link → ur5e_mount_link → ur_base_link → ... → eoat_camera_link
    7-DOF System: 1 Turntable + 6 UR5e Joints
    Single Controller for Perfect Synchronization
  -->

  <!-- Include required dependencies -->
  <xacro:include filename="$(find inspection_cell_description)/urdf/inc/inspection_cell_common.xacro" />
  <xacro:include filename="$(find inspection_cell_description)/urdf/inc/inspection_cell_transmissions.xacro" />

  <!-- Materials for the inspection cell -->
  <material name="turntable_grey">
    <color rgba="0.6 0.6 0.6 1.0"/>
  </material>
  <material name="turntable_blue">
    <color rgba="0.4 0.6 0.8 1.0"/>
  </material>
  <material name="eoat_black">
    <color rgba="0 0 0 1"/>
  </material>
  <material name="eoat_blue">
    <color rgba="0.2 0.2 1 1"/>
  </material>
  <material name="mount_black">
    <color rgba="0.1 0.1 0.1 1.0"/>
  </material>

  <xacro:macro name="inspection_cell" params="
    name
    tf_prefix
    parent
    *ur5e_origin
    *turntable_origin
    generate_ros2_control_tag:=true
    joint_limits_parameters_file
    kinematics_parameters_file
    physical_parameters_file
    visual_parameters_file
    safety_limits:=false
    safety_pos_margin:=0.15
    safety_k_position:=20
    force_abs_paths:=false
    transmission_hw_interface:=hardware_interface/PositionJointInterface
    use_fake_hardware:=false
    mock_sensor_commands:=false
    sim_gazebo:=false
    sim_ignition:=false
    headless_mode:=false
    initial_positions:=${dict(turntable_disc_joint=0.0,shoulder_pan_joint=0.0,shoulder_lift_joint=0.0,elbow_joint=0.0,wrist_1_joint=0.0,wrist_2_joint=0.0,wrist_3_joint=0.0)}
    use_tool_communication:=false
    tool_voltage:=0
    tool_parity:=0
    tool_baud_rate:=115200
    tool_stop_bits:=1
    tool_rx_idle_chars:=1.5
    tool_tx_idle_chars:=3.5
    tool_device_name:=/tmp/ttyUR
    tool_tcp_port:=54321
    robot_ip:=192.168.0.112
    script_filename:=to_be_filled_by_ur_robot_driver
    output_recipe_filename:=to_be_filled_by_ur_robot_driver
    input_recipe_filename:=to_be_filled_by_ur_robot_driver
    reverse_port:=50001
    script_sender_port:=50002
    reverse_ip:=0.0.0.0
    script_command_port:=50004
    trajectory_port:=50003
    non_blocking_read:=true
    keep_alive_count:=2
    hash:=calib_unified_7dof_12345678901234567890
    ">

    <!-- Load UR configuration data from the provided .yaml files -->
    <xacro:read_model_data
      joint_limits_parameters_file="${joint_limits_parameters_file}"
      kinematics_parameters_file="${kinematics_parameters_file}"
      physical_parameters_file="${physical_parameters_file}"
      visual_parameters_file="${visual_parameters_file}"
      force_abs_paths="${force_abs_paths}"/>
    
    <xacro:if value="${generate_ros2_control_tag}">
      <!-- ros2 control include -->
      <xacro:include filename="$(find inspection_cell_description)/urdf/inspection_cell.ros2_control.xacro" />
      <!-- ros2 control instance -->
      <xacro:inspection_cell_ros2_control
        name="${name}"
        use_fake_hardware="${use_fake_hardware}"
        mock_sensor_commands="${mock_sensor_commands}"
        sim_gazebo="${sim_gazebo}"
        sim_ignition="${sim_ignition}"
        headless_mode="${headless_mode}"
        initial_positions="${initial_positions}"
        tf_prefix="${tf_prefix}"
        hash="${hash}"
        robot_ip="${robot_ip}"
        script_filename="${script_filename}"
        output_recipe_filename="${output_recipe_filename}"
        input_recipe_filename="${input_recipe_filename}"
        reverse_ip="${reverse_ip}"
        script_command_port="${script_command_port}"
        reverse_port="${reverse_port}"
        script_sender_port="${script_sender_port}"
        trajectory_port="${trajectory_port}"
        non_blocking_read="${non_blocking_read}"
        keep_alive_count="${keep_alive_count}"
        use_tool_communication="${use_tool_communication}"
        tool_voltage="${tool_voltage}"
        tool_parity="${tool_parity}"
        tool_baud_rate="${tool_baud_rate}"
        tool_stop_bits="${tool_stop_bits}"
        tool_rx_idle_chars="${tool_rx_idle_chars}"
        tool_tx_idle_chars="${tool_tx_idle_chars}"
        tool_device_name="${tool_device_name}"
        tool_tcp_port="${tool_tcp_port}" 
        />
    </xacro:if>

    <xacro:inspection_cell_transmissions 
      prefix="${tf_prefix}" 
      hw_interface="${transmission_hw_interface}" />

    <!-- ================================================================ -->
    <!-- LINK DEFINITIONS - OBJECT-CENTRIC UNIFIED CHAIN -->
    <!-- ================================================================ -->

    <!-- Table Link - Static visualization reference -->
    <link name="${tf_prefix}table_link">
      <visual>
        <origin xyz="0 0 -0.0225" rpy="0 0 0"/>
        <geometry>
          <box size="1 2 0.045"/>
        </geometry>
      </visual>
      <collision>
        <origin xyz="0 0 -0.0225" rpy="0 0 0"/>
        <geometry>
          <box size="1 2 0.045"/>
        </geometry>
      </collision>
    </link>


    <!-- Turntable Disc Link - DOF 1 (Rotates the object) -->
    <link name="${tf_prefix}turntable_disc_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://inspection_cell_description/meshes/collision/turntable_disc.stl"/>
        </geometry>
        <material name="turntable_blue"/>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder length="0.008" radius="0.084"/>
        </geometry>
      </collision>
      <inertial>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <mass value="0.31"/>
        <inertia
          ixx="0.00054849" ixy="0.0" ixz="0.0"
          iyy="0.00054849" iyz="0.0" izz="0.00109368" />
      </inertial>
    </link>

    <!-- Turntable Base Link Inertia - Coordinate alignment -->
    <link name="${tf_prefix}turntable_base_link_inertia">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="package://inspection_cell_description/meshes/collision/turntable_base.stl"/>
        </geometry>
        <material name="turntable_grey"/>
      </visual>
      <collision>
        <origin xyz="0 0 0.047" rpy="0 0 0"/>
        <geometry>
          <cylinder length="0.094" radius="0.10715"/>
        </geometry>
      </collision>
      <inertial>
        <origin xyz="0 0 0.047" rpy="0 0 0"/>
        <mass value="1.5"/>
        <inertia
          ixx="0.00540992" ixy="0.0" ixz="0.0"
          iyy="0.00540992" iyz="0.0" izz="0.00861084" />
      </inertial>
    </link>

    <!-- Turntable Base Link - Physical turntable base -->
    <link name="${tf_prefix}turntable_base_link"/>

    <!-- UR5e Mount Block Link - 7" x 7" x 4.5" - FRAME AT BASE OF BLOCK -->
    <link name="${tf_prefix}ur5e_mount_link">
      <visual>
        <origin xyz="0 0 0.01125" rpy="0 0 0"/>
        <geometry>
          <box size="0.180 0.180 0.0225"/>
        </geometry>
        <material name="mount_black"/>
      </visual>
      <collision>
        <origin xyz="0 0 0.01125" rpy="0 0 0"/>
        <geometry>
          <box size="0.180 0.180 0.0225"/>
        </geometry>
      </collision>
    </link>

    <!-- ================================================================ -->
    <!-- UR5E ROBOT ARM LINKS (DOF 2-7) - Following Universal Robots Structure -->
    <!-- ================================================================ -->

    <!-- ur_base_link (mounted to ur5e_mount) -->
    <link name="${tf_prefix}ur_base_link"/>
    
    <!-- UR base_link_inertia (maintains UR internal coordinate system) -->
    <link name="${tf_prefix}base_link_inertia">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 ${pi}"/>
        <geometry>
          <xacro:get_mesh name="base" type="visual"/>
        </geometry>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 ${pi}"/>
        <geometry>
          <xacro:get_mesh name="base" type="collision"/>
        </geometry>
      </collision>
      <xacro:cylinder_inertial radius="${base_inertia_radius}" length="${base_inertia_length}" mass="${base_mass}">
        <origin xyz="0 0 0" rpy="0 0 0" />
      </xacro:cylinder_inertial>
    </link>
    
    <!-- Standard UR5e Links (unchanged from UR description) -->
    <link name="${tf_prefix}shoulder_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 ${pi}"/>
        <geometry>
          <xacro:get_mesh name="shoulder" type="visual"/>
        </geometry>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 ${pi}"/>
        <geometry>
          <xacro:get_mesh name="shoulder" type="collision"/>
        </geometry>
      </collision>
      <inertial>
        <mass value="${shoulder_mass}"/>
        <origin rpy="${shoulder_inertia_rotation}" xyz="${shoulder_cog}"/>
        <inertia
            ixx="${shoulder_inertia_ixx}"
            ixy="${shoulder_inertia_ixy}"
            ixz="${shoulder_inertia_ixz}"
            iyy="${shoulder_inertia_iyy}"
            iyz="${shoulder_inertia_iyz}"
            izz="${shoulder_inertia_izz}"
        />
      </inertial>
    </link>
    
    <link name="${tf_prefix}upper_arm_link">
      <visual>
        <origin xyz="0 0 ${shoulder_offset}" rpy="${pi/2} 0 ${-pi/2}"/>
        <geometry>
          <xacro:get_mesh name="upper_arm" type="visual"/>
        </geometry>
      </visual>
      <collision>
        <origin xyz="0 0 ${shoulder_offset}" rpy="${pi/2} 0 ${-pi/2}"/>
        <geometry>
          <xacro:get_mesh name="upper_arm" type="collision"/>
        </geometry>
      </collision>
      <inertial>
        <mass value="${upper_arm_mass}"/>
        <origin rpy="${upper_arm_inertia_rotation}" xyz="${upper_arm_cog}"/>
        <inertia
            ixx="${upper_arm_inertia_ixx}"
            ixy="${upper_arm_inertia_ixy}"
            ixz="${upper_arm_inertia_ixz}"
            iyy="${upper_arm_inertia_iyy}"
            iyz="${upper_arm_inertia_iyz}"
            izz="${upper_arm_inertia_izz}"
        />
      </inertial>
    </link>
    
    <link name="${tf_prefix}forearm_link">
      <visual>
        <origin xyz="0 0 ${elbow_offset}" rpy="${pi/2} 0 ${-pi/2}"/>
        <geometry>
          <xacro:get_mesh name="forearm" type="visual"/>
        </geometry>
      </visual>
      <collision>
        <origin xyz="0 0 ${elbow_offset}" rpy="${pi/2} 0 ${-pi/2}"/>
        <geometry>
          <xacro:get_mesh name="forearm" type="collision"/>
        </geometry>
      </collision>
      <inertial>
        <mass value="${forearm_mass}"/>
        <origin rpy="${forearm_inertia_rotation}" xyz="${forearm_cog}"/>
        <inertia
            ixx="${forearm_inertia_ixx}"
            ixy="${forearm_inertia_ixy}"
            ixz="${forearm_inertia_ixz}"
            iyy="${forearm_inertia_iyy}"
            iyz="${forearm_inertia_iyz}"
            izz="${forearm_inertia_izz}"
        />
      </inertial>
    </link>
    
    <link name="${tf_prefix}wrist_1_link">
      <xacro:get_visual_params name="wrist_1" type="visual_offset"/>
      <visual>
        <origin xyz="0 0 ${visual_params}" rpy="${pi/2} 0 0"/>
        <geometry>
          <xacro:get_mesh name="wrist_1" type="visual"/>
        </geometry>
      </visual>
      <collision>
        <origin xyz="0 0 ${visual_params}" rpy="${pi/2} 0 0"/>
        <geometry>
          <xacro:get_mesh name="wrist_1" type="collision"/>
        </geometry>
      </collision>
      <inertial>
        <mass value="${wrist_1_mass}"/>
        <origin rpy="${wrist_1_inertia_rotation}" xyz="${wrist_1_cog}"/>
        <inertia
            ixx="${wrist_1_inertia_ixx}"
            ixy="${wrist_1_inertia_ixy}"
            ixz="${wrist_1_inertia_ixz}"
            iyy="${wrist_1_inertia_iyy}"
            iyz="${wrist_1_inertia_iyz}"
            izz="${wrist_1_inertia_izz}"
        />
      </inertial>
    </link>
    
    <link name="${tf_prefix}wrist_2_link">
      <xacro:get_visual_params name="wrist_2" type="visual_offset"/>
      <visual>
        <origin xyz="0 0 ${visual_params}" rpy="0 0 0"/>
        <geometry>
          <xacro:get_mesh name="wrist_2" type="visual"/>
        </geometry>
      </visual>
      <collision>
        <origin xyz="0 0 ${visual_params}" rpy="0 0 0"/>
        <geometry>
          <xacro:get_mesh name="wrist_2" type="collision"/>
        </geometry>
      </collision>
      <inertial>
        <mass value="${wrist_2_mass}"/>
        <origin rpy="${wrist_2_inertia_rotation}" xyz="${wrist_2_cog}"/>
        <inertia
            ixx="${wrist_2_inertia_ixx}"
            ixy="${wrist_2_inertia_ixy}"
            ixz="${wrist_2_inertia_ixz}"
            iyy="${wrist_2_inertia_iyy}"
            iyz="${wrist_2_inertia_iyz}"
            izz="${wrist_2_inertia_izz}"
        />
      </inertial>
    </link>
    
    <link name="${tf_prefix}wrist_3_link">
      <xacro:get_visual_params name="wrist_3" type="visual_offset_xyz"/>
      <xacro:property name="mesh_offset" value="${visual_params}" scope="parent"/>

      <xacro:if value="${visual_params == ''}">
        <xacro:get_visual_params name="wrist_3" type="visual_offset"/>
        <xacro:property name="mesh_offset" value="0 0 ${visual_params}" scope="parent"/>
      </xacro:if>
      <visual>
        <origin xyz="${mesh_offset}" rpy="${pi/2} 0 0"/>
        <geometry>
          <xacro:get_mesh name="wrist_3" type="visual"/>
        </geometry>
      </visual>
      <collision>
        <origin xyz="${mesh_offset}" rpy="${pi/2} 0 0"/>
        <geometry>
          <xacro:get_mesh name="wrist_3" type="collision"/>
        </geometry>
      </collision>
      <inertial>
        <mass value="${wrist_3_mass}"/>
        <origin rpy="${wrist_3_inertia_rotation}" xyz="${wrist_3_cog}"/>
        <inertia
            ixx="${wrist_3_inertia_ixx}"
            ixy="${wrist_3_inertia_ixy}"
            ixz="${wrist_3_inertia_ixz}"
            iyy="${wrist_3_inertia_iyy}"
            iyz="${wrist_3_inertia_iyz}"
            izz="${wrist_3_inertia_izz}"
        />
      </inertial>
    </link>

    <!-- ================================================================ -->
    <!-- INSPECTION EOAT LINKS -->
    <!-- ================================================================ -->

    <link name="${tf_prefix}eoat_base_link">
      <visual>
        <origin xyz="0 0 0.024535"/>
        <geometry>
          <cylinder radius="0.0325" length="0.04907"/>
        </geometry>
        <material name="eoat_blue"/>
      </visual>
      <collision>
        <origin xyz="0 0 0.024535"/>
        <geometry>
          <cylinder radius="0.0325" length="0.04907"/>
        </geometry>
      </collision>
      <inertial>
        <origin xyz="0 0 0.024535"/>
        <mass value="0.1"/>
        <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/>
      </inertial>
    </link>

    <link name="${tf_prefix}eoat_top_link">
      <visual>
        <origin xyz="0 0 0.024535"/>
        <geometry>
          <cylinder radius="0.035" length="0.04907"/>
        </geometry>
        <material name="eoat_black"/>
      </visual>
      <collision>
        <origin xyz="0 0 0.024535"/>
        <geometry>
          <cylinder radius="0.035" length="0.04907"/>
        </geometry>
      </collision>
      <inertial>
        <origin xyz="0 0 0.024535"/>
        <mass value="0.05"/>
        <inertia ixx="0.00005" ixy="0.0" ixz="0.0" iyy="0.00005" iyz="0.0" izz="0.00005"/>
      </inertial>
    </link>

    <link name="${tf_prefix}eoat_camera_link">
      <visual>
        <origin xyz="0 0 0.080"/>
        <geometry>
          <cylinder radius="0.0325" length="0.160"/>
        </geometry>
        <material name="eoat_black"/>
      </visual>
      <collision>
        <origin xyz="0 0 0.080"/>
        <geometry>
          <cylinder radius="0.0325" length="0.160"/>
        </geometry>
      </collision>
      <inertial>
        <origin xyz="0 0 0.080"/>
        <mass value="0.2"/>
        <inertia ixx="0.0002" ixy="0.0" ixz="0.0" iyy="0.0002" iyz="0.0" izz="0.0002"/>
      </inertial>
    </link>

    <link name="${tf_prefix}eoat_body_link">
      <visual>
        <origin xyz="0 0 0.0625"/>
        <geometry>
          <box size="0.125 0.125 0.125"/>
        </geometry>
        <material name="eoat_black"/>
      </visual>
      <collision>
        <origin xyz="0 0 0.0625"/>
        <geometry>
          <box size="0.125 0.125 0.125"/>
        </geometry>
      </collision>
      <inertial>
        <origin xyz="0 0 0.0625"/>
        <mass value="0.15"/>
        <inertia ixx="0.00015" ixy="0.0" ixz="0.0" iyy="0.00015" iyz="0.0" izz="0.00015"/>
      </inertial>
    </link>

    <!-- ================================================================ -->
    <!-- INDUSTRIAL COMPATIBILITY FRAMES -->
    <!-- ================================================================ -->

    <link name="${tf_prefix}ft_frame"/>
    <link name="${tf_prefix}base"/>
    <link name="${tf_prefix}flange"/>
    <link name="${tf_prefix}tool0"/>
    <link name="${tf_prefix}turntable_base"/>

    <!-- ================================================================ -->
    <!-- JOINTS - OBJECT-CENTRIC UNIFIED KINEMATIC CHAIN -->
    <!-- ================================================================ -->

    <!-- Object Frame - ROOT of unified kinematic chain -->

    <joint name="${tf_prefix}object_to_disc" type="fixed">
      <parent link="${parent}"/>
      <child link="${tf_prefix}turntable_disc_link"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </joint>

    <!-- DOF 1: Turntable Disc Rotation - Object rotates with disc -->
    <joint name="${tf_prefix}turntable_disc_joint" type="revolute">
      <parent link="${tf_prefix}turntable_disc_link"/>
      <child link="${tf_prefix}turntable_base_link_inertia"/>
      <origin xyz="0 0 -0.1015" rpy="0 0 0"/>   <!-- Position disc below object -->
      <axis xyz="0 0 1"/>
      <limit 
        lower="${turntable_disc_lower_limit}" 
        upper="${turntable_disc_upper_limit}"
        effort="${turntable_disc_effort_limit}" 
        velocity="${turntable_disc_velocity_limit}"/>
      <xacro:if value="${safety_limits}">
        <safety_controller 
          soft_lower_limit="${turntable_disc_lower_limit + safety_pos_margin}" 
          soft_upper_limit="${turntable_disc_upper_limit - safety_pos_margin}" 
          k_position="${safety_k_position}" 
          k_velocity="0.0"/>
      </xacro:if>
      <dynamics damping="0" friction="0"/>
    </joint>

    <!-- Turntable Base Link Inertia - Coordinate alignment -->
    <!-- <joint name="${tf_prefix}disc_to_base_inertia" type="fixed">
      <parent link="${tf_prefix}turntable_base_link"/>
      <child link="${tf_prefix}turntable_base_link_inertia"/>
      <origin xyz="-0.76835 0 0" rpy="0 0 0"/>
    </joint> -->

    <!-- Turntable Base Link - Physical base structure -->
    <joint name="${tf_prefix}base_inertia_to_base" type="fixed">
      <parent link="${tf_prefix}turntable_base_link_inertia"/>
      <child link="${tf_prefix}turntable_base_link"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </joint>

    <joint name="${tf_prefix}ur5e_mount_to_table" type="fixed">
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <parent link="${tf_prefix}ur5e_mount_link"/>
      <child link="${tf_prefix}table_link"/>
    </joint>

    <!-- UR5e Mount - Connected via turntable base -->
    <joint name="${tf_prefix}base_to_ur_mount" type="fixed">
      <parent link="${tf_prefix}turntable_base_link"/>
      <child link="${tf_prefix}ur5e_mount_link"/>
      <origin xyz="0 0.75 0" rpy="0 0 0"/>
    </joint>

    <!-- UR5e Base - Mounted on mount block -->
    <joint name="${tf_prefix}mount_to_ur" type="fixed">
      <parent link="${tf_prefix}ur5e_mount_link"/>
      <child link="${tf_prefix}ur_base_link"/>
      <origin xyz="0 0 0.0225" rpy="0 0 ${pi}"/>
    </joint>

    <!-- UR Coordinate System Alignment -->
    <joint name="${tf_prefix}ur_base_link-base_link_inertia" type="fixed">
      <parent link="${tf_prefix}ur_base_link"/>
      <child link="${tf_prefix}base_link_inertia"/>
      <origin xyz="0 0 0" rpy="0 0 ${pi}"/>
    </joint>

    <!-- ================================================================ -->
    <!-- DOF 2-7: STANDARD UR5E JOINTS -->
    <!-- ================================================================ -->

    <!-- DOF 2: Shoulder Pan Joint -->
    <joint name="${tf_prefix}shoulder_pan_joint" type="revolute">
      <parent link="${tf_prefix}base_link_inertia"/>
      <child link="${tf_prefix}shoulder_link"/>
      <origin xyz="${shoulder_x} ${shoulder_y} ${shoulder_z}" rpy="${shoulder_roll} ${shoulder_pitch} ${shoulder_yaw}"/>
      <axis xyz="0 0 1"/>
      <limit lower="${shoulder_pan_lower_limit}" upper="${shoulder_pan_upper_limit}"
        effort="${shoulder_pan_effort_limit}" velocity="${shoulder_pan_velocity_limit}"/>
      <xacro:if value="${safety_limits}">
        <safety_controller soft_lower_limit="${shoulder_pan_lower_limit + safety_pos_margin}" 
                          soft_upper_limit="${shoulder_pan_upper_limit - safety_pos_margin}" 
                          k_position="${safety_k_position}" k_velocity="0.0"/>
      </xacro:if>
      <dynamics damping="0" friction="0"/>
    </joint>

    <!-- DOF 3: Shoulder Lift Joint -->
    <joint name="${tf_prefix}shoulder_lift_joint" type="revolute">
      <parent link="${tf_prefix}shoulder_link"/>
      <child link="${tf_prefix}upper_arm_link"/>
      <origin xyz="${upper_arm_x} ${upper_arm_y} ${upper_arm_z}" rpy="${upper_arm_roll} ${upper_arm_pitch} ${upper_arm_yaw}"/>
      <axis xyz="0 0 1"/>
      <limit lower="${shoulder_lift_lower_limit}" upper="${shoulder_lift_upper_limit}"
        effort="${shoulder_lift_effort_limit}" velocity="${shoulder_lift_velocity_limit}"/>
      <xacro:if value="${safety_limits}">
        <safety_controller soft_lower_limit="${shoulder_lift_lower_limit + safety_pos_margin}" 
                          soft_upper_limit="${shoulder_lift_upper_limit - safety_pos_margin}" 
                          k_position="${safety_k_position}" k_velocity="0.0"/>
      </xacro:if>
      <dynamics damping="0" friction="0"/>
    </joint>

    <!-- DOF 4: Elbow Joint -->
    <joint name="${tf_prefix}elbow_joint" type="revolute">
      <parent link="${tf_prefix}upper_arm_link"/>
      <child link="${tf_prefix}forearm_link"/>
      <origin xyz="${forearm_x} ${forearm_y} ${forearm_z}" rpy="${forearm_roll} ${forearm_pitch} ${forearm_yaw}"/>
      <axis xyz="0 0 1"/>
      <limit lower="${elbow_joint_lower_limit}" upper="${elbow_joint_upper_limit}"
        effort="${elbow_joint_effort_limit}" velocity="${elbow_joint_velocity_limit}"/>
      <xacro:if value="${safety_limits}">
        <safety_controller soft_lower_limit="${elbow_joint_lower_limit + safety_pos_margin}" 
                          soft_upper_limit="${elbow_joint_upper_limit - safety_pos_margin}" 
                          k_position="${safety_k_position}" k_velocity="0.0"/>
      </xacro:if>
      <dynamics damping="0" friction="0"/>
    </joint>

    <!-- DOF 5: Wrist 1 Joint -->
    <joint name="${tf_prefix}wrist_1_joint" type="revolute">
      <parent link="${tf_prefix}forearm_link"/>
      <child link="${tf_prefix}wrist_1_link"/>
      <origin xyz="${wrist_1_x} ${wrist_1_y} ${wrist_1_z}" rpy="${wrist_1_roll} ${wrist_1_pitch} ${wrist_1_yaw}"/>
      <axis xyz="0 0 1"/>
      <limit lower="${wrist_1_lower_limit}" upper="${wrist_1_upper_limit}"
        effort="${wrist_1_effort_limit}" velocity="${wrist_1_velocity_limit}"/>
      <xacro:if value="${safety_limits}">
        <safety_controller soft_lower_limit="${wrist_1_lower_limit + safety_pos_margin}" 
                          soft_upper_limit="${wrist_1_upper_limit - safety_pos_margin}" 
                          k_position="${safety_k_position}" k_velocity="0.0"/>
      </xacro:if>
      <dynamics damping="0" friction="0"/>
    </joint>

    <!-- DOF 6: Wrist 2 Joint -->
    <joint name="${tf_prefix}wrist_2_joint" type="revolute">
      <parent link="${tf_prefix}wrist_1_link"/>
      <child link="${tf_prefix}wrist_2_link"/>
      <origin xyz="${wrist_2_x} ${wrist_2_y} ${wrist_2_z}" rpy="${wrist_2_roll} ${wrist_2_pitch} ${wrist_2_yaw}"/>
      <axis xyz="0 0 1"/>
      <limit lower="${wrist_2_lower_limit}" upper="${wrist_2_upper_limit}"
             effort="${wrist_2_effort_limit}" velocity="${wrist_2_velocity_limit}"/>
      <xacro:if value="${safety_limits}">
        <safety_controller soft_lower_limit="${wrist_2_lower_limit + safety_pos_margin}" 
                          soft_upper_limit="${wrist_2_upper_limit - safety_pos_margin}" 
                          k_position="${safety_k_position}" k_velocity="0.0"/>
      </xacro:if>
      <dynamics damping="0" friction="0"/>
    </joint>

    <!-- DOF 7: Wrist 3 Joint -->
    <joint name="${tf_prefix}wrist_3_joint" type="${wrist_3_joint_type}">
      <parent link="${tf_prefix}wrist_2_link"/>
      <child link="${tf_prefix}wrist_3_link"/>
      <origin xyz="${wrist_3_x} ${wrist_3_y} ${wrist_3_z}" rpy="${wrist_3_roll} ${wrist_3_pitch} ${wrist_3_yaw}"/>
      <axis xyz="0 0 1"/>
      <xacro:if value="${wrist_3_joint_type != 'continuous'}">
        <limit lower="${wrist_3_lower_limit}" upper="${wrist_3_upper_limit}"
          effort="${wrist_3_effort_limit}" velocity="${wrist_3_velocity_limit}"/>
        <xacro:if value="${safety_limits}">
          <safety_controller soft_lower_limit="${wrist_3_lower_limit + safety_pos_margin}" 
                            soft_upper_limit="${wrist_3_upper_limit - safety_pos_margin}" 
                            k_position="${safety_k_position}" k_velocity="0.0"/>
        </xacro:if>
      </xacro:if>
      <xacro:unless value="${wrist_3_joint_type != 'continuous'}">
        <limit effort="${wrist_3_effort_limit}" velocity="${wrist_3_velocity_limit}"/>
        <xacro:if value="${safety_limits}">
          <safety_controller k_position="${safety_k_position}" k_velocity="0.0"/>
        </xacro:if>
      </xacro:unless>
      <dynamics damping="0" friction="0"/>
    </joint>

    <!-- ================================================================ -->
    <!-- STANDARD UR FRAMES -->
    <!-- ================================================================ -->

    <joint name="${tf_prefix}wrist_3_link-ft_frame" type="fixed">
      <parent link="${tf_prefix}wrist_3_link"/>
      <child link="${tf_prefix}ft_frame"/>
      <origin xyz="0 0 0" rpy="${pi} 0 0"/>
    </joint>

    <joint name="${tf_prefix}ur_base_link-base_fixed_joint" type="fixed">
      <origin xyz="0 0 0" rpy="0 0 ${pi}"/>
      <parent link="${tf_prefix}ur_base_link"/>
      <child link="${tf_prefix}base"/>
    </joint>

    <joint name="${tf_prefix}wrist_3-flange" type="fixed">
      <parent link="${tf_prefix}wrist_3_link"/>
      <child link="${tf_prefix}flange"/>
      <origin xyz="0 0 0" rpy="0 ${-pi/2.0} ${-pi/2.0}"/>
    </joint>

    <joint name="${tf_prefix}flange-tool0" type="fixed">
      <origin xyz="0 0 0" rpy="${pi/2.0} 0 ${pi/2.0}"/>
      <parent link="${tf_prefix}flange"/>
      <child link="${tf_prefix}tool0"/>
    </joint>

    <!-- ================================================================ -->
    <!-- EOAT ATTACHMENT -->
    <!-- ================================================================ -->

    <joint name="${tf_prefix}eoat_base_joint" type="fixed">
      <parent link="${tf_prefix}tool0"/>
      <child link="${tf_prefix}eoat_base_link"/>
      <origin xyz="0 0 0" rpy="0 0 ${radians(90)}"/>
    </joint>

    <joint name="${tf_prefix}eoat_top_joint" type="fixed">
      <parent link="${tf_prefix}eoat_base_link"/>
      <child link="${tf_prefix}eoat_top_link"/>
      <origin xyz="0 0 0.04907" rpy="0 0 0"/>
    </joint>

    <joint name="${tf_prefix}eoat_body_joint" type="fixed">
      <parent link="${tf_prefix}eoat_base_link"/>
      <child link="${tf_prefix}eoat_body_link"/>
      <origin xyz="0.050 0 0.125" rpy="${radians(90)} ${radians(180)} ${radians(-90)}"/>
    </joint>

    <joint name="${tf_prefix}eoat_camera_joint" type="fixed">
      <parent link="${tf_prefix}eoat_base_link"/>
      <child link="${tf_prefix}eoat_camera_link"/>
      <origin xyz="0 0 0.125" rpy="${radians(90)} ${radians(0)} ${radians(-90)}"/>
    </joint>

    <!-- ================================================================ -->
    <!-- INDUSTRIAL COMPATIBILITY FRAMES -->
    <!-- ================================================================ -->

    <joint name="${tf_prefix}turntable_base_link-turntable_base_fixed_joint" type="fixed">
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <parent link="${tf_prefix}turntable_base_link"/>
      <child link="${tf_prefix}turntable_base"/>
    </joint>

  </xacro:macro>
</robot>